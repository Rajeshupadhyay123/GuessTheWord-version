<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="scoreViewModel"
            type="com.example.android.guesstheword.screens.score.ScoreViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/score_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".screens.score.ScoreFragment">

        <TextView
            android:id="@+id/you_scored_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="32dp"
            android:fontFamily="sans-serif"
            android:text="@string/you_scored"
            android:textColor="@color/black_text_color"
            android:textSize="14sp"
            android:textStyle="normal"
            app:layout_constraintBottom_toTopOf="@+id/score_text"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_chainStyle="packed" />

        <TextView
            android:id="@+id/score_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:layout_marginBottom="8dp"
            android:fontFamily="sans-serif"
            android:textColor="@color/black_text_color"
            android:textSize="34sp"
            android:textStyle="normal"
            app:layout_constraintBottom_toTopOf="@+id/play_again_button"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.5"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/you_scored_text"
            app:layout_constraintVertical_chainStyle="packed"
            tools:text="40"
            android:text="@{String.valueOf(scoreViewModel.score)}"/>
        <!-- score.valueOf is used for converting the string to int-->
        <!--
            Here scoreViewModel is an liveData reference so it give you the recent change data
            and here we don't need the observer() to observer the data binding changes"
        -->

        <Button
            android:id="@+id/play_again_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="32dp"
            android:onClick="@{()-> scoreViewModel.onPLayAgain()}"
            android:text="@string/play_again"
            android:theme="@style/GoButton"
            android:visibility="visible"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>

<!--
    Listener binding are binding expression in the layout that run when click events such as
    onClick() are triggered.

    Listener binding are written as lambda expressions.

    Listener binding, you replace the click listener in the UI controller with listener
    binding in the layout file.

    "So here we uses the listener binding to communicate the LiveData directly with the
    viewModel"
-->